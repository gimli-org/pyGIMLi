ignore = [
    # "D100",
    # "D101",
    # "D102",
    # "D103",
    # "D104",
    # "D105",
    # "D106",
    # "D107",
    # "D200",
    # "D401",
    # "E402",
    # "E501",
    # "F401",
    "I001",  # Allow unsorted imports
    "N802",  # Allow "as" name should be lowercase
    "N803",  # Allow name should be lowercase
    "N806",  # Allow name should be lowercase
    "N815",  # Allow mixedCase in class scope
    "Q000",  # Allow single quotes in doc-strings
    "Q001",  # Allow double quotes in doc-strings
    "S110",  # Allow use of except/pass
    "S301",  # Allow use of pickle
    "SIM105",  # Allow use of except/pass
    "TRY003",  # Avoid specifying messages outside exception class; overly strict, especially for ValueError
]

[format]
docstring-code-format = true

[lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]


[lint.flake8-bugbear]
extend-immutable-calls = [
    "chr",
    "typer.Argument",
    "typer.Option",
]

[lint.pydocstyle]
convention = "numpy"

[lint.per-file-ignores]
"tests/*.py" = [
    # "D100",
    # "D101",
    # "D102",
    # "D103",
    # "D104",
    # "D105",
    # "D106",
    # "D107",
    "S101",  # use of "assert"
    "S102",  # use of "exec"
    "S106",  # possible hardcoded password.
    "PGH001",  # use of "eval"
]

[lint.pep8-naming]
staticmethod-decorators = [
    "pydantic.validator",
    "pydantic.root_validator",
]
