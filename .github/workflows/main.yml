name: pyGIMLi CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  pgcore:
    name: Building pgcore & bindings
    runs-on: self-hosted
    steps:
      - name: Clean-up
        run: rm -rf ~/.cache/pygimli
      - name: Getting pyGIMLi sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # checks out all branches and tags
          path: source
      - name: Creating virtual environment for the build
        run: |
          python -m venv venv-build
          source venv-build/bin/activate
          python -m pip install -U pip
          python -m pip install -r ./source/dev_requirements.txt
          pip lists
      - name: Running cmake
        run: |
          mkdir -p build
          cd build
          CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake ../source
      - name: Build libgimli
        run: make -j 8 gimli
        working-directory: build
      - name: Build Python bindings
        run: make pygimli J=4
        working-directory: build
  pgtest:
    name: Running tests
    runs-on: self-hosted
    needs: pgcore
    env:
      OPENBLAS_CORETYPE: "ARMV8" # current bug in OpenBlas core detection
    steps:
      - name: Creating virtual environment for the test
        run: |
          python -m venv venv-test
          source venv-test/bin/activate
          python -m pip install -U pip
      - name: Installing into test virtual environment
        run: |
          working-directory: source
          run: pip install -e . 
      - name: Run pg.test()
        run: python3 -c "import pygimli; pygimli.test(show=False, abort=True)"
        working-directory: source
  docs:
      name: Build website with examples
      needs: pgtest
      runs-on: self-hosted
      env:
        DISPLAY: ":99.0"
        PYVISTA_OFF_SCREEN: True
        OPENBLAS_CORETYPE: "ARMV8" # current bug in OpenBlas core detection
      steps:
        - name: Staring test virtual environment
          run: source venv-test/bin/activate
        - name: Clean gallery
          working-directory: build
          run: make clean-gallery
        - name: Running sphinx
          working-directory: build
          run: xvfb-run make doc # xvfb is necessary for headless display of pyvista plots
  merging:
    name: Automerging
    runs-on: self-hosted
    needs: docs
    if: github.ref == 'refs/heads/dev' # Only merge from dev
    steps:
      - name: Merge dev -> master (with rebase)
        working-directory: source
        run: |
          # Authorize with personal access token
          echo "config"
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          echo "remote"
          git remote set-url origin https://florian-wagner:${{ secrets.SECRET }}@github.com/gimli-org/gimli.git

          # Make sure to be in sync with dev on remote
          echo "status"
          git status
          echo "fetch"
          git fetch
          echo "clean"
          git clean -ffdx
          echo "reset"
          git reset --hard HEAD

          # Rebase and push to master
          echo "stash"
          git stash
          echo "rebase"
          git rebase origin/master
          git push origin HEAD:master --force-with-lease
  upload-html:
    name: Upload HTML to dev.pygimli.org
    runs-on: self-hosted
    needs: docs
    if: github.ref == 'refs/heads/dev' # Only merge from dev
    steps:
      - name: Uploading built html files
        working-directory: build
        run: rsync -avP --delete doc/html/ /var/www/html


