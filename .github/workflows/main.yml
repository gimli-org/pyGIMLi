name: pyGIMLi CI

env: 
    SOURCE_DIR: source
    
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
    
jobs:
  pgcore:
    name: Building pgcore & bindings
    runs-on: [self-hosted, test-runner]
    steps:
      - name: Getting pyGIMLi sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # checks out all branches and tags
          path: source
      - name: Cleaning old builds
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh clean
      - name: Prepare build
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh build_pre
      - name: Build libgimli
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh build
      - name: Test bindings
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh build_post
  pgtest:
    name: Running tests
    runs-on: [self-hosted, test-runner]
    needs: pgcore
    env:
      OPENBLAS_CORETYPE: "ARMV8" # current bug in OpenBlas core detection
    steps:
      - name: Prepare tests
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh test_pre
      - name: Run pg.test()
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh test
  docs:
      name: Build website with examples
      needs: pgtest
      runs-on: [self-hosted, test-runner]
      env:
        DISPLAY: ":99.0"
        PYVISTA_OFF_SCREEN: True
        OPENBLAS_CORETYPE: "ARMV8" # current bug in OpenBlas core detection
      steps:
        - name: Preparing doc build
          run: bash ./$SOURCE_DIR/core/scripts/workflow.sh doc_pre
        - name: Running sphinx
          run: bash ./$SOURCE_DIR/core/scripts/workflow.sh doc
  upload-html:
    name: Upload HTML to dev.pygimli.org
    runs-on: [self-hosted, test-runner]
    needs: docs
    if: github.ref == 'refs/heads/dev' # Only merge from dev
    steps:
      - name: Uploading built html files
        run: bash ./$SOURCE_DIR/core/scripts/workflow.sh doc_post
  merging:
    name: Automerging
    runs-on: [self-hosted, test-runner]
    needs: upload-html
    if: github.ref == 'refs/heads/dev' # Only merge from dev
    steps:
      - name: Merge dev -> main (with rebase)
        working-directory: source
        run: |
          # Authorize with personal access token
          echo "config"
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          echo "remote"
          git remote set-url origin https://florian-wagner:${{ secrets.SECRET }}@github.com/gimli-org/gimli.git

          # Make sure to be in sync with dev on remote
          echo "status"
          git status
          echo "fetch"
          git fetch
          echo "clean"
          git clean -ffdx
          echo "reset"
          git reset --hard HEAD

          # Rebase and push to master
          echo "stash"
          git stash
          echo "rebase"
          git rebase origin/main
          git push origin HEAD:main --force-with-lease
        
